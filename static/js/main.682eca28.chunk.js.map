{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","this","goods","visibleGoods","sort","prev","curr","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetButtonVisible","className","type","classNames","onClick","setState","map","good","uuidv4","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,uGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZE,EAzCH,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAqBzB,OAnBKR,EAASK,MACZI,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQR,GACN,KAAKJ,EAASa,SACZ,OAAOF,EAAKG,cAAcF,GAE5B,KAAKZ,EAASe,OACZ,OAAOJ,EAAKK,OAASJ,EAAKI,OAE5B,QACE,OAAO,MAKXV,GACFG,EAAaQ,UAGRR,EAgBSS,CAAkBjB,EAAiB,CAC/CG,WACAE,eAEIa,EAAuBf,IAAaJ,EAASK,MAAQC,EAE3D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaJ,EAASa,WAEtCU,QAAS,kBAAM,EAAKC,SAAS,CAAEpB,SAAUJ,EAASa,YAPpD,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaJ,EAASe,SAEtCQ,QAAS,kBAAM,EAAKC,SAAS,CAAEpB,SAAUJ,EAASe,UAPpD,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,WACP,EAAKC,UAAS,kBACZ,CAAElB,YADU,EAAGA,gBARrB,qBAgBCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CAAEpB,SAAUJ,EAASK,KAAMC,YAAY,KAJzD,sBAYJ,6BACE,6BACGE,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAmCA,GAAXC,6BAzEtC,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.682eca28.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (!SortType.NONE) {\n    visibleGoods.sort((prev, curr) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return prev.localeCompare(curr);\n\n        case SortType.LENGTH:\n          return prev.length - curr.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  sortType: SortType;\n  isReversed: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n    const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.setState({ sortType: SortType.ALPHABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => {\n              this.setState(({ isReversed: prevIsReversed }) => (\n                { isReversed: !prevIsReversed }\n              ));\n            }}\n          >\n            Reverse\n          </button>\n\n          {isResetButtonVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ sortType: SortType.NONE, isReversed: false });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li data-cy=\"Good\" key={uuidv4()}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}